package NYT.NObjectClient.NProto;

import "yt_proto/yt/core/misc/proto/guid.proto";
import "yt_proto/yt/core/ytree/proto/attributes.proto";
import "yt_proto/yt/client/cell_master/proto/cell_directory.proto";
import "yt_proto/yt/client/node_tracker_client/proto/node_directory.proto";
import "yt_proto/yt/client/hive/proto/cluster_directory.proto";
import "yt/ytlib/chunk_client/proto/medium_directory.proto";
import "yt/ytlib/object_client/proto/user_directory.proto";

////////////////////////////////////////////////////////////////////////////////

message TReqCreateObject
{
    required int32 type = 1;
    optional bool ignore_existing = 3 [default = false];
    optional NYT.NYTree.NProto.TAttributeDictionary object_attributes = 2;
}

message TRspCreateObject
{
    required NYT.NProto.TGuid object_id = 1;
    optional bool two_phase_creation = 2;
}

////////////////////////////////////////////////////////////////////////////////

message TReqGetClusterMeta
{
    optional bool populate_node_directory = 1;
    optional bool populate_cluster_directory = 2;
    optional bool populate_medium_directory = 3;
    optional bool populate_cell_directory = 4;
    optional bool populate_master_cache_node_addresses = 5;
    optional bool populate_timestamp_provider_node_addresses = 6;
    optional bool populate_features = 7;
    optional bool populate_chaos_cache_node_addresses = 8 [default = false];
    optional bool populate_user_directory = 9;
}

message TRspGetClusterMeta
{
    optional NNodeTrackerClient.NProto.TNodeDirectory node_directory = 1;
    optional NHiveClient.NProto.TClusterDirectory cluster_directory = 2;
    optional NChunkClient.NProto.TMediumDirectory medium_directory = 3;
    optional NCellMasterClient.NProto.TCellDirectory cell_directory = 4;
    repeated string master_cache_node_addresses = 5;
    repeated string timestamp_provider_node_addresses = 6;
    optional bytes features = 7; // YSON
    repeated string chaos_cache_node_addresses = 8;
    optional NObjectClient.NProto.TUserDirectory user_directory = 9;
}

////////////////////////////////////////////////////////////////////////////////

message TReqCheckPermissionByAcl
{
    required string user = 1;
    required int32 permission = 2;
    required string acl = 3;
    optional bool ignore_missing_subjects = 4 [default = false];
}

message TRspCheckPermissionByAcl
{
    required int32 action = 1;
    optional NYT.NProto.TGuid subject_id = 2;
    optional string subject_name = 3;
    repeated string missing_subjects = 4;
}

////////////////////////////////////////////////////////////////////////////////

message TReqAddMaintenance
{
    required int32 component = 1; // EMaintenanceComponent
    required string address = 2;
    required int32 type = 3; // EMaintenanceType
    required string comment = 4;
    // Required for RPC and HTTP proxies.
    optional NYT.NProto.TGuid component_registry_id = 5;

    // COMPAT(kvk1920): For compatibility with pre-24.2 native clients.
    optional bool supports_per_target_response = 6 [default = false];
}

message TRspAddMaintenance
{
    // COMPAT(kvk1920): For compatibility with pre-24.2 masters.
    optional NYT.NProto.TGuid id = 1;

    message TMaintenanceIdPerTarget
    {
        required string target = 1;
        required NYT.NProto.TGuid id = 2;
    }
    repeated TMaintenanceIdPerTarget ids = 2;
}

////////////////////////////////////////////////////////////////////////////////

message TReqRemoveMaintenance
{
    required int32 component = 1; // EMaintenanceComponent
    required string address = 2;
    repeated NYT.NProto.TGuid ids = 3; // TMaintenanceId
    optional string user = 4;
    optional int32 type = 5; // EMaintenanceType
    optional bool mine = 6 [default = false];
    // Required for RPC and HTTP proxies.
    optional NYT.NProto.TGuid component_registry_id = 7;

    // COMPAT(kvk1920): For compatibility with pre-24.2 native clients.
    optional bool supports_per_target_response = 8 [default = false];
}

message TRspRemoveMaintenance
{
    message TRemovedMaintenanceCount
    {
        required int32 type = 1; // EMaintenanceType
        required int32 count = 2;
    };

    // COMPAT(kvk1920): For compatibility with pre-24.2 masters.
    repeated TRemovedMaintenanceCount removed_maintenance_counts = 7;

    // COMPAT(kvk1920): For compatibility with pre-24.2 masters.
    optional bool supports_per_target_response = 9 [default = false];

    message TRemovedMaintenanceCountPerTarget
    {
        required string target = 1;
        repeated TRemovedMaintenanceCount counts = 2;
    }
    repeated TRemovedMaintenanceCountPerTarget removed_maintenance_counts_per_target = 10;

    reserved 1 to 6, 8;
}

////////////////////////////////////////////////////////////////////////////////

message TReqVectorizedRead
{
    // NB: template request should be passed via attachments.
    required int32 template_request_part_count = 1;
    repeated NYT.NProto.TGuid object_ids = 2;
}

message TRspVectorizedRead
{
    message TSubresponse
    {
        required int32 part_count = 1;
        required NYT.NProto.TGuid object_id = 2;
    }

    repeated TSubresponse subresponses = 1;
}

////////////////////////////////////////////////////////////////////////////////
