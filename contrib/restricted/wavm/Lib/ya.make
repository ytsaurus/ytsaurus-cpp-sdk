# Generated by devtools/yamaker.

LIBRARY()

LICENSE(
    Apache-2.0 AND
    BSD-3-Clause AND
    CC0-1.0 AND
    Public-Domain
)

LICENSE_TEXTS(.yandex_meta/licenses.list.txt)

VERSION(2022-05-14)

PEERDIR(
    contrib/libs/libunwind
    contrib/libs/llvm18/lib/Analysis
    contrib/libs/llvm18/lib/AsmParser
    contrib/libs/llvm18/lib/BinaryFormat
    contrib/libs/llvm18/lib/Bitcode/Reader
    contrib/libs/llvm18/lib/Bitcode/Writer
    contrib/libs/llvm18/lib/Bitstream/Reader
    contrib/libs/llvm18/lib/CodeGen
    contrib/libs/llvm18/lib/CodeGen/AsmPrinter
    contrib/libs/llvm18/lib/CodeGen/GlobalISel
    contrib/libs/llvm18/lib/CodeGen/MIRParser
    contrib/libs/llvm18/lib/CodeGen/SelectionDAG
    contrib/libs/llvm18/lib/DebugInfo/CodeView
    contrib/libs/llvm18/lib/DebugInfo/DWARF
    contrib/libs/llvm18/lib/DebugInfo/MSF
    contrib/libs/llvm18/lib/Demangle
    contrib/libs/llvm18/lib/ExecutionEngine
    contrib/libs/llvm18/lib/ExecutionEngine/JITLink
    contrib/libs/llvm18/lib/ExecutionEngine/Orc
    contrib/libs/llvm18/lib/ExecutionEngine/RuntimeDyld
    contrib/libs/llvm18/lib/Frontend/OpenMP
    contrib/libs/llvm18/lib/IR
    contrib/libs/llvm18/lib/IRReader
    contrib/libs/llvm18/lib/Linker
    contrib/libs/llvm18/lib/MC
    contrib/libs/llvm18/lib/MC/MCDisassembler
    contrib/libs/llvm18/lib/MC/MCParser
    contrib/libs/llvm18/lib/Object
    contrib/libs/llvm18/lib/Passes
    contrib/libs/llvm18/lib/ProfileData
    contrib/libs/llvm18/lib/Remarks
    contrib/libs/llvm18/lib/Support
    contrib/libs/llvm18/lib/Target
    contrib/libs/llvm18/lib/Target/AArch64
    contrib/libs/llvm18/lib/Target/AArch64/AsmParser
    contrib/libs/llvm18/lib/Target/AArch64/Disassembler
    contrib/libs/llvm18/lib/Target/AArch64/MCTargetDesc
    contrib/libs/llvm18/lib/Target/AArch64/TargetInfo
    contrib/libs/llvm18/lib/Target/AArch64/Utils
    contrib/libs/llvm18/lib/Target/ARM
    contrib/libs/llvm18/lib/Target/ARM/AsmParser
    contrib/libs/llvm18/lib/Target/ARM/Disassembler
    contrib/libs/llvm18/lib/Target/ARM/MCTargetDesc
    contrib/libs/llvm18/lib/Target/ARM/TargetInfo
    contrib/libs/llvm18/lib/Target/ARM/Utils
    contrib/libs/llvm18/lib/Target/BPF
    contrib/libs/llvm18/lib/Target/BPF/AsmParser
    contrib/libs/llvm18/lib/Target/BPF/Disassembler
    contrib/libs/llvm18/lib/Target/BPF/MCTargetDesc
    contrib/libs/llvm18/lib/Target/BPF/TargetInfo
    contrib/libs/llvm18/lib/Target/NVPTX
    contrib/libs/llvm18/lib/Target/NVPTX/MCTargetDesc
    contrib/libs/llvm18/lib/Target/NVPTX/TargetInfo
    contrib/libs/llvm18/lib/Target/PowerPC
    contrib/libs/llvm18/lib/Target/PowerPC/AsmParser
    contrib/libs/llvm18/lib/Target/PowerPC/Disassembler
    contrib/libs/llvm18/lib/Target/PowerPC/MCTargetDesc
    contrib/libs/llvm18/lib/Target/PowerPC/TargetInfo
    contrib/libs/llvm18/lib/Target/WebAssembly
    contrib/libs/llvm18/lib/Target/WebAssembly/AsmParser
    contrib/libs/llvm18/lib/Target/WebAssembly/Disassembler
    contrib/libs/llvm18/lib/Target/WebAssembly/MCTargetDesc
    contrib/libs/llvm18/lib/Target/WebAssembly/TargetInfo
    contrib/libs/llvm18/lib/Target/X86
    contrib/libs/llvm18/lib/Target/X86/AsmParser
    contrib/libs/llvm18/lib/Target/X86/Disassembler
    contrib/libs/llvm18/lib/Target/X86/MCTargetDesc
    contrib/libs/llvm18/lib/Target/X86/TargetInfo
    contrib/libs/llvm18/lib/TextAPI
    contrib/libs/llvm18/lib/Transforms/AggressiveInstCombine
    contrib/libs/llvm18/lib/Transforms/CFGuard
    contrib/libs/llvm18/lib/Transforms/Coroutines
    contrib/libs/llvm18/lib/Transforms/IPO
    contrib/libs/llvm18/lib/Transforms/InstCombine
    contrib/libs/llvm18/lib/Transforms/Instrumentation
    contrib/libs/llvm18/lib/Transforms/Scalar
    contrib/libs/llvm18/lib/Transforms/Utils
    contrib/libs/llvm18/lib/Transforms/Vectorize
    library/cpp/sanitizer/include
)

ADDINCL(
    contrib/libs/libunwind/include
    ${ARCADIA_BUILD_ROOT}/contrib/libs/llvm18/include
    contrib/libs/llvm18/include
    contrib/restricted/wavm/Include
)

NO_COMPILER_WARNINGS()

NO_UTIL()

CFLAGS(
    -DHAS_FUTIMENS
    -DHAS_UTIMENSAT
    -DWASM_C_API=WAVM_API
    -DWAVM_API=
)

SRCS(
    Emscripten/Emscripten.cpp
    Emscripten/EmscriptenThreads.cpp
    IR/DisassemblyNames.cpp
    IR/FeatureSpec.cpp
    IR/FloatPrinting.cpp
    IR/Module.cpp
    IR/Operators.cpp
    IR/RandomModule.cpp
    IR/Types.cpp
    IR/Validate.cpp
    LLVMJIT/EmitConvert.cpp
    LLVMJIT/EmitCore.cpp
    LLVMJIT/EmitExceptions.cpp
    LLVMJIT/EmitFunction.cpp
    LLVMJIT/EmitMem.cpp
    LLVMJIT/EmitModule.cpp
    LLVMJIT/EmitNumeric.cpp
    LLVMJIT/EmitTable.cpp
    LLVMJIT/EmitVar.cpp
    LLVMJIT/LLVMCompile.cpp
    LLVMJIT/LLVMJIT.cpp
    LLVMJIT/LLVMModule.cpp
    LLVMJIT/Thunk.cpp
    LLVMJIT/Win64EH.cpp
    Logging/Logging.cpp
    NFA/NFA.cpp
    ObjectCache/ObjectCache.cpp
    Platform/POSIX/ClockPOSIX.cpp
    Platform/POSIX/DiagnosticsPOSIX.cpp
    Platform/POSIX/ErrorPOSIX.cpp
    Platform/POSIX/EventPOSIX.cpp
    Platform/POSIX/FilePOSIX.cpp
    Platform/POSIX/MemoryPOSIX.cpp
    Platform/POSIX/MutexPOSIX.cpp
    Platform/POSIX/RWMutexPOSIX.cpp
    Platform/POSIX/RandomPOSIX.cpp
    Platform/POSIX/SignalPOSIX.cpp
    Platform/POSIX/ThreadPOSIX.cpp
    RegExp/RegExp.cpp
    Runtime/Atomics.cpp
    Runtime/Compartment.cpp
    Runtime/Context.cpp
    Runtime/Exception.cpp
    Runtime/Global.cpp
    Runtime/Instance.cpp
    Runtime/Intrinsics.cpp
    Runtime/Invoke.cpp
    Runtime/Linker.cpp
    Runtime/Memory.cpp
    Runtime/Module.cpp
    Runtime/ObjectGC.cpp
    Runtime/ResourceQuota.cpp
    Runtime/Runtime.cpp
    Runtime/Table.cpp
    Runtime/VectorOverMMap.cpp
    Runtime/WAVMIntrinsics.cpp
    ThreadTest/ThreadTest.cpp
    VFS/SandboxFS.cpp
    VFS/VFS.cpp
    WASI/WASI.cpp
    WASI/WASIArgsEnvs.cpp
    WASI/WASIClocks.cpp
    WASI/WASIDiagnostics.cpp
    WASI/WASIFile.cpp
    WASM/WASMSerialization.cpp
    WASTParse/Lexer.cpp
    WASTParse/Parse.cpp
    WASTParse/ParseFunction.cpp
    WASTParse/ParseModule.cpp
    WASTParse/ParseNumbers.cpp
    WASTParse/ParseTests.cpp
    WASTPrint/Print.cpp
    wavm-c/wavm-c.cpp
)

IF (ARCH_AARCH64)
    SRCS(
        Platform/POSIX/POSIX-AArch64.S
    )
ELSE()
    SRCS(
        Platform/POSIX/POSIX-X86_64.S
    )
ENDIF()

END()
