name: Check

on:
  workflow_call:
    inputs:
      commit-sha:
        required: false
        type: string
    secrets:
      YC_SA_JSON_CREDENTIALS:
        required: true
      GH_PERSONAL_ACCESS_TOKEN:
        required: true
      YC_VM_USERNAME:
        required: true
      YC_VM_SSH_PUBLIC_KEY:
        required: true


env:
  ACTIONS_ALLOW_USE_UNSECURE_NODE_VERSION: true

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout ytsaurus-cpp-sdk
        uses: actions/checkout@v3

      - name: Checkout PR
        if: ${{ inputs.commit-sha }}
        uses: actions/checkout@v3
        with:
          ref: ${{ inputs.commit-sha }}

      - name: Stop and remove old container
        run: docker rm -f build-container || true

      - name: Run container
        run: docker run -d --name build-container --network host -v "$(pwd)":/ytsaurus-cpp-sdk ghcr.io/ytsaurus/build-env:latest tail -f /dev/null

      - name: Build with libc++
        run: |
          docker exec build-container bash -c '
            set -ex
            mkdir -p /build
            cd /build
            rm -rf *
            cmake \
              -G Ninja \
              -DCMAKE_BUILD_TYPE=Release \
              -DCMAKE_TOOLCHAIN_FILE=/ytsaurus-cpp-sdk/clang.toolchain \
              -DCMAKE_C_COMPILER_LAUNCHER=ccache \
              -DCMAKE_CXX_COMPILER_LAUNCHER=ccache \
              -DCMAKE_PROJECT_TOP_LEVEL_INCLUDES=/ytsaurus-cpp-sdk/cmake/conan_provider.cmake \
              -DREQUIRED_LLVM_TOOLING_VERSION=16 \
              -DCMAKE_CXX_FLAGS_INIT="-stdlib=libc++" \
              /ytsaurus-cpp-sdk
            export CCACHE_BASEDIR="/ytsaurus-cpp-sdk"
            export CCACHE_REMOTE_ONLY=true
            export CCACHE_REMOTE_STORAGE="${{ vars.CCACHE_REMOTE_STORAGE }}"
            ninja
          '

      - name: Build with libstdc++
        run: |
          docker exec build-container bash -c '
            set -ex
            mkdir -p /build_gcc
            cd /build_gcc
            rm -rf *
            cmake \
              -G Ninja \
              -DCMAKE_BUILD_TYPE=Release \
              -DCMAKE_TOOLCHAIN_FILE=/ytsaurus-cpp-sdk/clang.toolchain \
              -DCMAKE_C_COMPILER_LAUNCHER=ccache \
              -DCMAKE_CXX_COMPILER_LAUNCHER=ccache \
              -DCMAKE_PROJECT_TOP_LEVEL_INCLUDES=/ytsaurus-cpp-sdk/cmake/conan_provider.cmake \
              -DREQUIRED_LLVM_TOOLING_VERSION=16 \
              -DCMAKE_CXX_FLAGS_INIT="-stdlib=libstdc++ -std=c++20" \
              /ytsaurus-cpp-sdk
            export CCACHE_BASEDIR="/ytsaurus-cpp-sdk"
            export CCACHE_REMOTE_ONLY=true
            export CCACHE_REMOTE_STORAGE="${{ vars.CCACHE_REMOTE_STORAGE }}"
            ninja
          '
